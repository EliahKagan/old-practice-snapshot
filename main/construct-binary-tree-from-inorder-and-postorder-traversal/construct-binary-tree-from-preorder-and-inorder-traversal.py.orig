# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """
        in_indices = {val: i for i, val in enumerate(inorder)}

        def build(size, pre_start, in_start):
            if not size:
                return None

            assert size > 0

            val = preorder[pre_start]
            in_index = in_indices[val]
            assert in_start <= in_index < in_start + size

            left_size = in_index - in_start

            root = TreeNode(val)

            root.left = build(size          = left_size,
                              pre_start     = pre_start + 1,
                              in_start      = in_start)

            root.right = build(size         = size - left_size - 1,
                               pre_start    = pre_start + left_size + 1,
                               in_start     = in_index + 1)
            return root

        assert len(preorder) == len(inorder)
        return build(len(preorder), 0, 0)
