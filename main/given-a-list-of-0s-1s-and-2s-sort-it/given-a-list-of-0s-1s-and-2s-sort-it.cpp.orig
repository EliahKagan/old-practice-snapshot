/*
  Sort the list of 0's,1's and 2's
  The input list will have at least one element  
  Node is defined as 
  struct node
  {
     int data;
     struct node *next;
  }

*/

#include <numeric>
#include <vector>

namespace {
    inline void rev_step(node *&acc, node *&cur)
    {
        const auto head = cur;
        cur = cur->next;
        head->next = acc;
        acc = head;
    }
    
    node *rev(node *acc, node *cur)
    {
        while (cur != nullptr) rev_step(acc, cur);
        return acc;
    }
    
    node *sorted(node *head)
    {
        std::vector<node *> bins (3);
        while (head != nullptr) rev_step(bins.at(head->data), head);
        return std::accumulate(bins.crbegin(), bins.crend(), (node *){}, rev);
    }
}

void sortList(node *const head)
{
    if (head == nullptr) return;
    const auto new_head = sorted(head);
    //std::swap(*head, *sorted(head));
}
